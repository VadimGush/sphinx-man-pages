
from enum import Enum, auto

class Entry(Enum):
    COMMENT = auto()
    HEADER = auto()
    TITLE = auto()
    NONE = auto()

tags = {
    Entry.COMMENT : ".\\\"",
    Entry.HEADER : ".TH",
    Entry.TITLE : ".SH",
    Entry.NONE : "",
}

def get_content(text, tag):
    return text[len(tag) : len(text)].strip();

def process_tag(text, entries, key, tag):
    if text.startswith(tag):
        entries[key] = get_content(text, tag)
        print("tag (" + str(key) + ") > " + entries[key])
        return True
    return False

def parse(lines):
    entries = []

    for line in lines:
        ln = line.replace("\n", "")

        tag_found = False
        for (name, value) in tags.items():
            if name is not Entry.NONE and process_tag(ln, entries, name, value):
                tag_found = True

        if not tag_found:
            entries.append((Entry.NONE, ln))

    for (key, value) in entries:
        print(key + " > " + value)
